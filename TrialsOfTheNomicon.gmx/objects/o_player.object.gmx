<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_shagra_run</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
healthbar = instance_create(x, y-30,o_healthbar);
animation_index = 0;
net_tick = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var facing_down = 0;
var facing_left = 1;
var facing_right = 2;
var facing_up = 3;
var facing = -1;

var key_w_down = keyboard_check(ord('W'));
var key_a_down = keyboard_check(ord('A'));
var key_s_down = keyboard_check(ord('S'));
var key_d_down = keyboard_check(ord('D'));

if (key_a_down) { x -= 4; facing = facing_left; } else if (key_d_down) { x += 4; facing = facing_right; }
if (key_s_down) { y += 4; facing = facing_down; } else if (key_w_down) { y -= 4; facing = facing_up; }

if (facing == -1) {
    animation_index = 0;
    image_index -= image_index mod 8;
} else {
    image_index = facing*8+floor(animation_index);
    animation_index += 0.3;
    if (animation_index &gt;= 8) {
        animation_index = 0;
    }
    
    if (net_tick &gt;= 4) {
        //update server with position
        var data = ds_map_create();
        var game = instance_find(o_gameControl,0);
        ds_map_add(data, "matchId", game.matchId);
        ds_map_add(data, "position", game.position);
        ds_map_add(data, "x", x);
        ds_map_add(data, "y", y);
        script_sendMsg(nm_move, data);
    }
    
    net_tick++;
}

healthbar.x = x-50
healthbar.y = y-40


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
